trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        version: '3.1.x'
        packageType: sdk
      displayName: 'Install .NET Core'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
        workingDirectory: $(Build.SourcesDirectory)\bookmark-browser-api
      displayName: 'Build the API'
    #- task: DotNetCoreCLI@2
    #  inputs:
    #    command: test
    #    arguments: '--configuration $(buildConfiguration)'
    #    projects: '**/*Tests/*.csproj'
    #  displayName: 'Run unit tests'
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --r win-x64 --output $(Build.ArtifactStagingDirectory)\api-deploy'
        workingDirectory: $(Build.SourcesDirectory)\bookmark-browser-api
        zipAfterPublish: false
      displayName: 'Publish API build'
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
      workingDirectory: $(Build.SourcesDirectory)\bookmark-browser
      displayName: 'Install UI dependencies'
    - script: |
        npm run build
      workingDirectory: $(Build.SourcesDirectory)\bookmark-browser
      displayName: 'Build the UI'
    - script: |
        npm run test
      workingDirectory: $(Build.SourcesDirectory)\bookmark-browser
      displayName: 'Run UI unit tests'
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.ArtifactStagingDirectory)\api-deploy\bookmark-browser-api'
        contents: '**'
        targetFolder: '$(Build.SourcesDirectory)\bookmark-browser\build'
      displayName: 'Combine build output'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)\bookmark-browser\build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)\bookmark-browser-$(Build.BuildId).zip'
      displayName: 'Create artifact'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\bookmark-browser-$(Build.BuildId).zip'
        ArtifactName: bookmark-browser
      displayName: 'Publish artifact'
