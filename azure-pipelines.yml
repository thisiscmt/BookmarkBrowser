trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  dotNetVersion: '6.0.x'
  targetRuntime: 'linux-x64'

jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        version: $(dotNetVersion)
        includePreviewVersions: false
      displayName: 'Install .NET Core SDK'
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
    - task: DotNetCoreCLI@2
      inputs:
        command: "restore"
        feedsToUse: "select"
        feedRestore: "store/feedName"
        projects: "**/*.csproj"
        includeNuGetOrg: true
      displayName: "Install API dependencies"
    - script: |
        dotnet build --configuration $(buildConfiguration)
      workingDirectory: $(Build.SourcesDirectory)/bookmark-browser-api-dot-net
      displayName: 'Build the API'
    - script: |
        npm install
      workingDirectory: $(Build.SourcesDirectory)/bookmark-browser
      displayName: 'Install UI dependencies'
    - script: |
        npm run build
      workingDirectory: $(Build.SourcesDirectory)/bookmark-browser
      displayName: 'Build the UI'
    - script: |
        npm run test
      workingDirectory: $(Build.SourcesDirectory)/bookmark-browser
      displayName: 'Run UI unit tests'
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: True
        workingDirectory: $(Build.SourcesDirectory)/bookmark-browser-api-dot-net
        arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
      displayName: 'Create API artifact'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/bookmark-browser/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/bookmark-browser-ui-$(Build.BuildId).zip'
      displayName: 'Create UI artifact'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: bookmark-browser-api-dot-net
      displayName: 'Publish API artifact'
#    - task: PublishBuildArtifacts@1
#      inputs:
#        PathtoPublish: '$(Build.ArtifactStagingDirectory)/bookmark-browser-api-$(Build.BuildId).zip'
#        ArtifactName: bookmark-browser-api
#      displayName: 'Publish API artifact'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/bookmark-browser-ui-$(Build.BuildId).zip'
        ArtifactName: bookmark-browser-ui
      displayName: 'Publish UI artifact'
